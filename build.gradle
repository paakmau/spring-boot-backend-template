plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.liquibase.gradle' version '2.0.4'
    id 'com.diffplug.spotless' version '5.14.3'
    id 'name.remal.sonarlint' version '1.5.0'
    id 'com.star-zero.gradle.githook' version '1.2.1'
    id 'ru.netris.commitlint' version '1.4.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation 'org.liquibase:liquibase-core:4.3.3'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.google.code.gson:gson:2.8.8'

    liquibaseRuntime 'org.liquibase:liquibase-core:4.3.3'
    liquibaseRuntime 'mysql:mysql-connector-java'
    liquibaseRuntime 'org.springframework.boot:spring-boot-starter-data-jpa'
    liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:4.4.3'
    liquibaseRuntime sourceSets.main.output
}

test {
    useJUnitPlatform()
}

liquibase {
    activities {
        main {
            changeLogFile 'src/main/resources/db/changelog/db.changelog-master.yaml'
            url 'jdbc:mysql://localhost:3306/demo?createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC'
            username 'root'
            password System.getenv('MYSQL_ROOT_PASSWORD')
            referenceUrl 'hibernate:spring:com.example.demo.entity?dialect=liquibase.ext.hibernate.database.HibernateGenericDialect'
        }
    }
}

spotless {
    java {
        importOrder()
        removeUnusedImports()

        googleJavaFormat('1.11.0').aosp()
    }

    groovyGradle {
        target '**/*.gradle'

        greclipse()

        indentWithSpaces()
    }

    json {
        target '**/*.json'

        eclipseWtp('json')

        indentWithSpaces()
    }

    format 'misc', {
        target '**/*.md', '**/*.yaml'

        prettier()
    }
}

githook {
    hooks {
        'pre-commit' {
            task = 'spotlessCheck sonarlintMain sonarlintTest'
        }
        'commit-msg' {
            task = 'commitlint -Dmsgfile=\$1'
        }
    }
}
